apply plugin: 'com.android.application'

def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}

android {
    compileSdkVersion 22
    buildToolsVersion "23.0.1"

    defaultConfig {
        applicationId "com.hwand.pinhaowanr"
        minSdkVersion 15
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"
    }

    signingConfigs {
        Debug {
            storeFile file('./tools/dev/debug.keystore')
            keyAlias 'androiddebugkey'
            keyPassword 'android'
            storePassword 'android'


        }

        release {
            storeFile file("./tools/release/pinhaowan.keystore")
            storePassword "pinhaowan"
            keyAlias "pinhaowan"
            keyPassword "pinhaowan"
        }

    }

    buildTypes {
        debug {

            signingConfig signingConfigs.Debug

            minifyEnabled false
            shrinkResources false

            manifestPlaceholders = [AmapKey: "f91c84f07042257dc7f746b9055031bc"]

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            minifyEnabled false
            shrinkResources false

            manifestPlaceholders = [AmapKey: "a7b36a7f85e739a06af70d06be5ece20"]

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            /**
            signingConfig signingConfigs.release

            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        // 输出apk名称为pinhaowan_v1.0_2015-01-15_wandoujia.apk
                        def fileName = "pinhaowan_v${defaultConfig.versionName}_${releaseTime()}_${variant.productFlavors[0].name}.apk"
                        output.outputFile = new File(outputFile.parent, fileName)
                    }
                }
            }

            */

        }


    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }


    productFlavors {
        wandoujia {
        }
        xiaomi {
        }
        huawei {
        }
        baidu {
        }
        qihu {
        }
        yingyongbao {
        }
        xiaowu {
        }
        official {
        }
        google {

        }
        productFlavors.all {
            flavor -> flavor.manifestPlaceholders = [Umeng: name]
        }

    }
}



repositories {
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    compile 'com.android.support:multidex:1.0.0'
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile project(':share_aar')
    testCompile 'junit:junit:4.12'
    //    compile 'com.android.support:appcompat-v7:23.1.0'
    //    compile 'com.android.support:design:23.1.0'
    compile files('libs/gson-2.2.4.jar')
    compile files('libs/android-support-v4.jar')
    compile files('libs/httpmime-4.1.3.jar')
    compile files('libs/nineoldandroids-2.4.0.jar')
    compile files('libs/org.apache.http.legacy.jar')
    compile files('libs/AMap_Location_v1.4.1.jar')
    //    compile files('libs/SocialSDK_WeiXin_1.jar')
    //    compile files('libs/SocialSDK_WeiXin_2.jar')
    //    compile files('libs/umeng_social_sdk.jar')
    compile files('libs/universal-image-loader-1.9.2.jar')
    compile files('libs/android-support-v7-recyclerview.jar')
    compile(name:'cardview-v7-21.0.0', ext:'aar')

    compile files('libs/MapApiLocation_1.4.1.jar')
    compile files('libs/AMap_Services_V2.4.0.jar')
}
